name: Create Release

on:
  pull_request:
    branches: [ main, staging ]
    types: [ closed ]

permissions:
  contents: write

env: 
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  create_release:
    if: ${{ github.event.pull_request.merged }}
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - id: create-release
        uses: rymndhng/release-on-push-action@v0.28.0
        with:
          bump_version_scheme: norelease
          release_name: 'Release <RELEASE_TAG>'
          
  build_and_upload_assets:
    needs: create_release
    if: |
      contains(github.event.pull_request.labels.*.name, 'release:major') ||
      contains(github.event.pull_request.labels.*.name, 'release:minor') ||
      contains(github.event.pull_request.labels.*.name, 'release:patch')
    name: Build and Upload Release Asset for ${{ matrix.OS_NAME }}
    runs-on: ${{ matrix.OS_VERSION }}
    strategy:
      matrix:
        include:
          - OS_VERSION: macos-latest
            OS_NAME: MacOS
            DATA_SEPARATOR: ":"
          - OS_VERSION: windows-latest
            OS_NAME: Windows
            DATA_SEPARATOR: ";"    
    env:
      EXE_FILE_NAME: MazeProdigy
      ZIP_FILE_NAME: MazeProdigy-${{ matrix.OS_NAME }}.zip
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Create Release Asset with Pyinstaller
        run: pyinstaller maze_prodigy/__main__.py --name "${{ env.EXE_FILE_NAME }}" --windowed --onefile
          --add-data "maze_prodigy/assets/themes/*.json${{ matrix.DATA_SEPARATOR }}themes"
          --add-data "maze_prodigy/assets/images/*.png${{ matrix.DATA_SEPARATOR }}images"
      - name: Archive Release Assets
        uses: thedoctor0/zip-release@0.7.1
        with:
          filename: ${{ env.ZIP_FILE_NAME }}
          directory: "dist"
          path: "${{ env.EXE_FILE_NAME }}.*"
      - name: Get Upload URL
        id: get_upload_url
        uses: bruceadams/get-release@v1.3.2
      - name: Upload Release Asset
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
          asset_path: dist/${{ env.ZIP_FILE_NAME }}
          asset_name: ${{ env.ZIP_FILE_NAME }}